/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr.project.ui;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.security.NoSuchAlgorithmException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SealedObject;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import lapr.project.model.EventCenter;

/**
 *
 * @author Miguel Santos <1161386@isep.ipp.pt>
 */
public class MainWindow extends javax.swing.JFrame {

    private static final long serialVersionUID = 1;
    private EventCenter eventCenter;
    private boolean loginStatus = false;
    private boolean userStatus = false;
    private boolean organizerStatus = false;
    private boolean eventEmployeeStatus = false;
    private boolean eventManagerStatus = false;

    /**
     * Creates new form MainWindow
     *
     * @param eventCenter
     */
    public MainWindow(EventCenter eventCenter) {

        initComponents();
//        if(!loginStatus){
//            registerMenuItem.setVisible(false);
//            defineUser.setVisible(false);
//        }
        this.eventCenter = eventCenter;
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        userNameLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        loginMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        registerMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        createEventMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        defineUser = new javax.swing.JMenu();
        defineEventManagerMenuItem = new javax.swing.JMenuItem();
        defineOrganizerMenuItem = new javax.swing.JMenuItem();
        defineEmployeeMenuItem = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        submitApplicationMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        decideApplicationItem = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        showEmployeeMeanRatingMenuItem = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        showEventsSubmissionKeywordsMenuItem = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        assignApplicationItem = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        createStandMenuItem = new javax.swing.JMenuItem();
        jSeparator12 = new javax.swing.JPopupMenu.Separator();
        showEventAcceptanceRateUI = new javax.swing.JMenuItem();
        importExportMenu = new javax.swing.JMenu();
        importMenuItem = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        exportMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Event Management");
        setResizable(false);

        jPanel1.setLayout(null);

        userNameLabel.setBackground(new java.awt.Color(0, 102, 204));
        userNameLabel.setFont(new java.awt.Font("Georgia", 0, 11)); // NOI18N
        userNameLabel.setForeground(new java.awt.Color(0, 204, 255));
        userNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(userNameLabel);
        userNameLabel.setBounds(430, 10, 160, 20);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EventManagementImage.jpg"))); // NOI18N
        jLabel2.setText("asdasd");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 600, 330);

        jMenu1.setText("Menu");

        loginMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyring-icon.png"))); // NOI18N
        loginMenuItem.setText("Login");
        loginMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(loginMenuItem);
        jMenu1.add(jSeparator3);

        registerMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-user-group-new-icon.png"))); // NOI18N
        registerMenuItem.setMnemonic('M');
        registerMenuItem.setText("Register");
        registerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(registerMenuItem);
        jMenu1.add(jSeparator1);

        createEventMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Calendar-icon.png"))); // NOI18N
        createEventMenuItem.setText("Create Event");
        createEventMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEventMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(createEventMenuItem);
        jMenu1.add(jSeparator4);

        defineUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Relationship-icon.png"))); // NOI18N
        defineUser.setText("Define User");

        defineEventManagerMenuItem.setText("Define Event Manager");
        defineEventManagerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defineEventManagerMenuItemActionPerformed(evt);
            }
        });
        defineUser.add(defineEventManagerMenuItem);

        defineOrganizerMenuItem.setText("Define Organizer");
        defineOrganizerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defineOrganizerMenuItemActionPerformed(evt);
            }
        });
        defineUser.add(defineOrganizerMenuItem);

        defineEmployeeMenuItem.setText("Define Employee");
        defineEmployeeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defineEmployeeMenuItemActionPerformed(evt);
            }
        });
        defineUser.add(defineEmployeeMenuItem);

        jMenu1.add(defineUser);
        jMenu1.add(jSeparator5);

        submitApplicationMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Messaging-Gmail-Login-icon.png"))); // NOI18N
        submitApplicationMenuItem.setText("Submit Application");
        submitApplicationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitApplicationMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(submitApplicationMenuItem);
        jMenu1.add(jSeparator2);

        decideApplicationItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yellow-ok-icon.png"))); // NOI18N
        decideApplicationItem.setText("Decide Application");
        decideApplicationItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decideApplicationItemActionPerformed(evt);
            }
        });
        jMenu1.add(decideApplicationItem);
        jMenu1.add(jSeparator7);

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button-Info-icon.png"))); // NOI18N
        jMenuItem1.setText("Show Stand Information");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator8);

        showEmployeeMeanRatingMenuItem.setText("Show Employee Mean Rating");
        showEmployeeMeanRatingMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showEmployeeMeanRatingMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(showEmployeeMeanRatingMenuItem);
        jMenu1.add(jSeparator9);

        showEventsSubmissionKeywordsMenuItem.setText("Show Event Submission Keywords");
        showEventsSubmissionKeywordsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showEventsSubmissionKeywordsMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(showEventsSubmissionKeywordsMenuItem);
        jMenu1.add(jSeparator10);

        assignApplicationItem.setText("Assign Application");
        assignApplicationItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignApplicationItemActionPerformed(evt);
            }
        });
        jMenu1.add(assignApplicationItem);
        jMenu1.add(jSeparator11);

        createStandMenuItem.setText("Create Stand");
        createStandMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createStandMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(createStandMenuItem);
        jMenu1.add(jSeparator12);

        showEventAcceptanceRateUI.setText("Show Event Acceptance Rate");
        showEventAcceptanceRateUI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showEventAcceptanceRateUIActionPerformed(evt);
            }
        });
        jMenu1.add(showEventAcceptanceRateUI);

        jMenuBar1.add(jMenu1);

        importExportMenu.setText("Import/Export");

        importMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/import-icon.png"))); // NOI18N
        importMenuItem.setText("Import File");
        importMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importMenuItemActionPerformed(evt);
            }
        });
        importExportMenu.add(importMenuItem);
        importExportMenu.add(jSeparator6);

        exportMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/export-icon.png"))); // NOI18N
        exportMenuItem.setText("Export File");
        exportMenuItem.setToolTipText("");
        exportMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportMenuItemActionPerformed(evt);
            }
        });
        importExportMenu.add(exportMenuItem);

        jMenuBar1.add(importExportMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void createEventMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEventMenuItemActionPerformed
        CreateEvent event = new CreateEvent(eventCenter);
    }//GEN-LAST:event_createEventMenuItemActionPerformed

    private void registerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerMenuItemActionPerformed
        CreateUser ur = new CreateUser(eventCenter);
    }//GEN-LAST:event_registerMenuItemActionPerformed

    private void loginMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginMenuItemActionPerformed
        LoginUI login = new LoginUI(loginStatus, eventCenter, userNameLabel, userStatus, organizerStatus, eventEmployeeStatus, eventManagerStatus, MainWindow.this);

    }//GEN-LAST:event_loginMenuItemActionPerformed

    private void defineOrganizerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defineOrganizerMenuItemActionPerformed
        DefineOrganizer defineOrganizer = new DefineOrganizer(eventCenter);
    }//GEN-LAST:event_defineOrganizerMenuItemActionPerformed

    private void defineEventManagerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defineEventManagerMenuItemActionPerformed
        DefineEventManager dem = new DefineEventManager(eventCenter);
    }//GEN-LAST:event_defineEventManagerMenuItemActionPerformed

    private void defineEmployeeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defineEmployeeMenuItemActionPerformed
        DefineEventEmployee dee = new DefineEventEmployee(eventCenter);
    }//GEN-LAST:event_defineEmployeeMenuItemActionPerformed

    private void submitApplicationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitApplicationMenuItemActionPerformed
        try {
            SubmitApplication s = new SubmitApplication(eventCenter);
        } catch (ParseException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_submitApplicationMenuItemActionPerformed

    private void decideApplicationItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decideApplicationItemActionPerformed
        try {
            DecideApplicationUI dapp = new DecideApplicationUI(userNameLabel.getText(), eventCenter);
        } catch (ParseException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_decideApplicationItemActionPerformed

    private void exportMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportMenuItemActionPerformed

        FileOutputStream outFile = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("/Documents"));
        int retrival = fileChooser.showSaveDialog(MainWindow.this);
        if (retrival == JFileChooser.APPROVE_OPTION) {

            SecretKey keyToMaximumScoreInLAPR = new SecretKeySpec(new byte[]{0x13, 0x45, 0x27, 0x19, 0x34, 0x50, 0x67, 0x024, 0x047, 0x09}, "blowfish");
            FileOutputStream file = null;
            try {
                Cipher cipher = Cipher.getInstance("blowfish");
                cipher.init(Cipher.ENCRYPT_MODE, keyToMaximumScoreInLAPR);
                SealedObject sealedObject = new SealedObject(eventCenter, cipher);
                file = new FileOutputStream(fileChooser.getSelectedFile() + ".bin");
                CipherOutputStream cipherOutputStream = new CipherOutputStream(new BufferedOutputStream(file), cipher);
                ObjectOutputStream outputStream = new ObjectOutputStream(cipherOutputStream);
                outputStream.writeObject(sealedObject);
                outputStream.close();
                JOptionPane.showMessageDialog(null, "All data saved!");
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchPaddingException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                ex.printStackTrace();
            } finally {
                try {
                    file.close();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Problem with reading from file");
                } catch (NullPointerException npx) {
                    JOptionPane.showMessageDialog(null, "Problem with outputing to file");
                }

            }

        }

    }//GEN-LAST:event_exportMenuItemActionPerformed


    private void importMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importMenuItemActionPerformed
        try {
            FileInputStream inputFile = null;
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File("/Documents"));
            int retrival = fileChooser.showOpenDialog(MainWindow.this);
            if (retrival == JFileChooser.APPROVE_OPTION) {
                SecretKey keyToMaximumScoreInLAPR = new SecretKeySpec(new byte[]{0x13, 0x45, 0x27, 0x19, 0x34, 0x50, 0x67, 0x024, 0x047, 0x09}, "blowfish");
                FileInputStream file = null;
                try {
                    Cipher cipher = Cipher.getInstance("blowfish");
                    cipher.init(Cipher.DECRYPT_MODE, keyToMaximumScoreInLAPR);
                    file = new FileInputStream(fileChooser.getSelectedFile());
                    CipherInputStream cipherInputStream = new CipherInputStream(new BufferedInputStream((file)), cipher);
                    ObjectInputStream inputStream = new ObjectInputStream(cipherInputStream);
                    SealedObject sealedObject = (SealedObject) inputStream.readObject();
                    this.eventCenter = (EventCenter) sealedObject.getObject(cipher);

                    JOptionPane.showMessageDialog(null, "All data imported!");

                } catch (Exception ex) {
                    ex.printStackTrace();
                } finally {
                    try {
                        file.close();
                    } catch (NullPointerException npx) {
                        JOptionPane.showMessageDialog(null, "Problem with reading from file");
                    }
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_importMenuItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        ShowEventStandsInformationUI jk = new ShowEventStandsInformationUI(eventCenter);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void showEmployeeMeanRatingMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showEmployeeMeanRatingMenuItemActionPerformed
        ShowEmployeeMeanRating semr = new ShowEmployeeMeanRating(eventCenter);
    }//GEN-LAST:event_showEmployeeMeanRatingMenuItemActionPerformed

    private void showEventsSubmissionKeywordsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showEventsSubmissionKeywordsMenuItemActionPerformed
        ShowEventSubmissionKeywordsUI swsk = new ShowEventSubmissionKeywordsUI(eventCenter);
    }//GEN-LAST:event_showEventsSubmissionKeywordsMenuItemActionPerformed

    private void assignApplicationItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignApplicationItemActionPerformed
        AssignmentApplicationUI apui = new AssignmentApplicationUI(eventCenter);
    }//GEN-LAST:event_assignApplicationItemActionPerformed

    private void createStandMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createStandMenuItemActionPerformed
        CreateStand createStand = new CreateStand(eventCenter);
    }//GEN-LAST:event_createStandMenuItemActionPerformed

    private void showEventAcceptanceRateUIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showEventAcceptanceRateUIActionPerformed
        ShowEventAcceptanceRateUI sear = new ShowEventAcceptanceRateUI(eventCenter);
    }//GEN-LAST:event_showEventAcceptanceRateUIActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem assignApplicationItem;
    public javax.swing.JMenuItem createEventMenuItem;
    private javax.swing.JMenuItem createStandMenuItem;
    private javax.swing.JMenuItem decideApplicationItem;
    private javax.swing.JMenuItem defineEmployeeMenuItem;
    private javax.swing.JMenuItem defineEventManagerMenuItem;
    private javax.swing.JMenuItem defineOrganizerMenuItem;
    private javax.swing.JMenu defineUser;
    private javax.swing.JMenuItem exportMenuItem;
    private javax.swing.JMenu importExportMenu;
    private javax.swing.JMenuItem importMenuItem;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JPopupMenu.Separator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JMenuItem loginMenuItem;
    private javax.swing.JMenuItem registerMenuItem;
    private javax.swing.JMenuItem showEmployeeMeanRatingMenuItem;
    private javax.swing.JMenuItem showEventAcceptanceRateUI;
    private javax.swing.JMenuItem showEventsSubmissionKeywordsMenuItem;
    private javax.swing.JMenuItem submitApplicationMenuItem;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables
}
