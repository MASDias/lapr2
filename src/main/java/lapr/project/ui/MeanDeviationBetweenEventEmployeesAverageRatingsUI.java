/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr.project.ui;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import lapr.project.controller.MeanDeviationBetweenEventEmployeesAverageRatingsController;
import lapr.project.model.Application;
import lapr.project.model.Event;
import lapr.project.model.EventCenter;
import lapr.project.model.EventEmployee;
import lapr.project.model.EventEmployeeList;
import lapr.project.model.EventEmployeeMeanRating;
import lapr.project.model.EventRegistry;

/**
 *
 * @author MarioDias
 */
public class MeanDeviationBetweenEventEmployeesAverageRatingsUI extends javax.swing.JFrame {

    private static final long serialVersionUID = 1;
    private MeanDeviationBetweenEventEmployeesAverageRatingsController controller;
    private EventRegistry eventRegistry;
    private EventEmployee employee;
    private EventEmployeeMeanRating employeeMeanRating;
    private EventEmployeeMeanRating globalMeanRating;
    private DefaultListModel<String> model = new DefaultListModel<>();

    /**
     * Creates new form MeanDeviationBetweenEventEmployeesAverageRatingsUI
     */
    public MeanDeviationBetweenEventEmployeesAverageRatingsUI(EventCenter eventCenter) {
        initComponents();
        controller = new MeanDeviationBetweenEventEmployeesAverageRatingsController(eventCenter);
        setVisible(true);
        eventRegistry = controller.getEventRegistry();
        employeeMeanJlist.setModel(model);
        populateCombobox();
        populateJList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        employeeMeanJlist = new javax.swing.JList<>();
        eventEmployeeCombobox = new javax.swing.JComboBox<>();
        label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setViewportView(employeeMeanJlist);

        eventEmployeeCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventEmployeeComboboxActionPerformed(evt);
            }
        });

        label1.setText("Employee:");

        label2.setText("Mean Deviation:");

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(eventEmployeeCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label2)
                            .addComponent(label1))
                        .addGap(0, 121, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventEmployeeCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eventEmployeeComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventEmployeeComboboxActionPerformed
        model.removeAllElements();
        populateJList();
        revalidate();
    }//GEN-LAST:event_eventEmployeeComboboxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void populateCombobox() {
        for (int i = 0; i < eventRegistry.size(); i++) {
            EventEmployeeList eventEmployeeList = controller.getEventEmployeeList(i);
            for (int j = 0; j < eventEmployeeList.size(); j++) {
                eventEmployeeCombobox.addItem(eventEmployeeList.getEmployee(j));
            }
        }
    }

    private void populateJList() {
        employee = eventEmployeeCombobox.getItemAt(eventEmployeeCombobox.getSelectedIndex());
        String user = employee.getUsername();
        globalMeanRating = controller.getGlobalMeanRating(eventRegistry);
        float globalMean = globalMeanRating.getGlobalMeanRating();
        employeeMeanRating = controller.getEmployeeMeanRating(eventRegistry, user);
        if (validadeEvaluation(user)) {
            for (int i = 0; i < employeeMeanRating.getCounterAplicationEmployee(); i++) {
                model.addElement(String.format("%.3f", Math.abs(employeeMeanRating.getEmployeeEvaluationList().get(i) - globalMean)));
            }
        } else {
            JOptionPane.showMessageDialog(null, "The employee " + user + " doesnt have any evaluations made");
        }
        revalidate();
    }

    private boolean validadeEvaluation(String user) {
        for (int i = 0; i < eventRegistry.size(); i++) {
            Event e = eventRegistry.getEvent(i);
            for (int j = 0; j < e.getApplicationsList().size(); j++) {
                Application a = e.getApplicationsList().getApplication(j);
                for (int k = 0; k < a.getReviewList().size(); k++) {
                    if (a.getReviewList().get(k).getAssignment().getEventEmployee().getUsername().equals(user)) {
                        return true;
                    }
                }
            }
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> employeeMeanJlist;
    private javax.swing.JComboBox<EventEmployee> eventEmployeeCombobox;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    // End of variables declaration//GEN-END:variables
}
