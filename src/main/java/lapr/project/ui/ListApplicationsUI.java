/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr.project.ui;

import javax.swing.DefaultListModel;
import lapr.project.controller.ApplicationListController;
import lapr.project.model.Application;
import lapr.project.model.ApplicationList;
import lapr.project.model.Event;
import lapr.project.model.EventCenter;
import lapr.project.model.EventRegistry;
import lapr.project.model.Organizer;
import lapr.project.model.User;

/**
 *
 * @author 1161386_1161391_1151708_1151172_1150807_Grupo41
 */
public class ListApplicationsUI extends javax.swing.JFrame {

    private static final long serialVersionUID = 1;
    private ApplicationListController applicationListController;
    private ApplicationList applicationList;
    private EventRegistry eventRegistry;
    private String loggedUser;
    private DefaultListModel<Application> modelNotEvaluated = new DefaultListModel<>();
    private DefaultListModel<Application> modelEvaluated = new DefaultListModel<>();

    /**
     * Creates new form ListApplicationsUI
     */
    public ListApplicationsUI(EventCenter eventCenter, String loggedUser) {
        initComponents();
        applicationListController = new ApplicationListController(eventCenter);
        eventRegistry = new EventRegistry();
        applicationsListJList.setModel(modelNotEvaluated);
        applicationsListEvaluatedJList4.setModel(modelEvaluated);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        applicationsListJList = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        applicationsListEvaluatedJList4 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("List of Applications");

        jLabel1.setText("Not evaluated Applications");

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Evaluated Applications");

        jScrollPane4.setViewportView(applicationsListJList);

        jScrollPane5.setViewportView(applicationsListEvaluatedJList4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelBtn)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelBtn)
                .addGap(6, 6, 6))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void infoEvent() {
        for (int i = 0; i < applicationListController.getEventRegistry().size(); i++) {
            Event e = applicationListController.getEventRegistry().getEvent(i);
            for (int j = 0; j < e.getOrganizerList().size(); j++) {
                Organizer o = e.getOrganizerList().getOrganizer(j);
                if (loggedUser.equals(o.getUsername()) || loggedUser.equals(o.getEmail())) {
                    eventRegistry.addEvent(e);
                }
            }
        }
    }

    private void populateList() {
        for (int i = 0; i < eventRegistry.size(); i++) {
            ApplicationList al = eventRegistry.getEvent(i).getApplicationsList();
            for (int j = 0; j < al.size(); j++) {
                if (al.getApplication(j).isEvaluated()) {
                    modelEvaluated.addElement(al.getApplication(j));
                } else {
                    modelNotEvaluated.addElement(al.getApplication(j));
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<Application> applicationsListEvaluatedJList4;
    private javax.swing.JList<Application> applicationsListJList;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables
}
